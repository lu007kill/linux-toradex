// SPDX-License-Identifier: GPL-2.0+ OR X11
/*
 * Copyright 2018-2019 Toradex
 */

/dts-v1/;
//#define IS_A0_SILICON

/*
 * Choose output point for LCDIF block:
 * By default use LCD Panel driver:
 * - Panel connected to
 *   - Generic Display Connector X20;
 *   - Unified Interface Display Connector X34;
 * OR
 * - VGA monitor connected to X24.
 *
 * Define LCDIF_OUT_ADV7125 to use ONLY (!) VGA monitor connected to X24
 * with our without DDC channel to use higher resolutions.
 *
 * NOTE: LCDIF output to LVDS transmitter is not supported for now.
 */
//#define LCDIF_OUT_ADV7125

#include "dt-bindings/pwm/pwm.h"
#include "fsl-imx8qxp-colibri.dtsi"

/ {
	model = "Toradex Colibri iMX8QXP";
	compatible = "toradex,colibri-imx8qxp-eval-v3", "toradex,colibri-imx8qxp", "fsl,imx8qxp";

	display-subsystem {
		status = "disabled";
	};

#ifndef LCDIF_OUT_ADV7125
	backlight: backlight {
		compatible = "pwm-backlight";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_bl_on>;
		gpios = <&gpio3 12 GPIO_ACTIVE_HIGH>; /* BKL1_ON */
		pwms = <&pwm_adma_lcdif 0 100000 PWM_POLARITY_INVERTED>;

		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <6>;
		status = "okay";
	};

	panel {
		compatible = "edt,et070080dh6";
		backlight = <&backlight>;
		enable-gpios = <&gpio4 19 GPIO_ACTIVE_HIGH>;

		port {
			lcd_display_in: endpoint {
				remote-endpoint = <&lcdif_out>;
			};
		};
	};
#else
	vga {
		compatible = "vga-connector";
		label = "vga";
		status = "okay";

		port {
			vga_in: endpoint {
				remote-endpoint = <&adv7125_out>;
			};
		};
	};

	vga-encoder {
		compatible = "adi,adv7125", "adi,adv7123";
		status = "okay";
		vdd-supply = <&vdd_3v3_vga>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				lcd_display_in: endpoint {
					remote-endpoint = <&lcdif_out>;
				};
			};
			port@1 {
				reg = <1>;
				adv7125_out: endpoint {
					remote-endpoint = <&vga_in>;
				};
			};
		};
	};
#endif
};

&adma_lcdif {
	pinctrl-names = "default";
	/* Dumb DAC to VGA converter doesn't support backlight, so
	 * instead use enable-gpios for LCDIF driver for this configuration
	 */
#ifndef LCDIF_OUT_ADV7125
	pinctrl-0 = <&pinctrl_lcdif>;
#else
	pinctrl-0 = <&pinctrl_lcdif &pinctrl_gpio_bl_on>;
	enable-gpios = <&gpio3 12 GPIO_ACTIVE_HIGH>; /* BKL1_ON */
	pinctrl-assert-gpios = <&gpio4 19 GPIO_ACTIVE_HIGH>;
#endif
	/* By default, Colibri iMX8QXP uses 18-bits output bus for eLCDIF.
	 * However, you can configure it to support 24-bits output.
	 * "X20 Generic Display Connector" of Colibri Evaluation Board v3.2
	 * supports 24-bits mode.
	 */
	bus-width = <18>;
	status = "okay";

	port@0 {
		lcdif_out: lcdif-endpoint {
			remote-endpoint = <&lcd_display_in>;
		};
	};
};

/* DSI/LVDS port 0 */
&i2c0_mipi_lvds0 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c0_mipi_lvds0>;
	clock-frequency = <100000>;
	status = "disabled";
};

&ldb1_phy {
	status = "disabled";
};

&ldb1 {
	status = "disabled";
};

&mipi_dsi_phy1 {
	status = "disabled";
};

&mipi_dsi1 {
	pwr-delay = <10>;
	status = "disabled";
};

&mipi_dsi_bridge1 {
	status = "disabled";
};

/* DSI/LVDS port 1 */
&i2c0_mipi_lvds1 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c0_mipi_csi>;
	clock-frequency = <100000>;
	status = "disabled";
};

&ldb2_phy {
	status = "disabled";
};

&ldb2 {
	status = "disabled";

	lvds-channel@0 {
		fsl,data-mapping = "jeida";
		fsl,data-width = <24>;
		status = "okay";
	};
};

&mipi_dsi_phy2 {
	status = "disabled";
};

&mipi_dsi2 {
	pwr-delay = <10>;
	status = "disabled ";
};

&mipi_dsi_bridge2 {
	status = "disabled";
};

&pwm_adma_lcdif {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm_a>;
	status = "okay";
};
